{"version":3,"sources":["reportWebVitals.js","App.js","NewPage.js","Routes.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Gif","props","useDefaultSrc","bind","event","target","src","process","this","onGifDisplayError","gif","to","pathname","state","onError","type","width","height","autoPlay","muted","loop","React","Component","Alert","message","Toast","animation","onClose","onToastClose","show","delay","autohide","Header","className","Body","Gifs","handleGifDisplayError","rows","gifs","forEach","push","SearchBar","handleSearchClick","handleInputTextChange","handleSubmit","e","onSearchClick","onInputTextChange","value","preventDefault","Form","onSubmit","Row","Col","Control","placeholder","inputText","onChange","sm","Button","variant","onClick","App","isSearchClicked","cannotLoadAtLeastOneImage","handleToastClose","gf","GiphyFetch","search","sort","lang","limit","offset","rating","data","setState","searchGif","alt","length","Spinner","NewPage","location","useLocation","Routes","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce378047.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './App.css';\n\nimport { GiphyFetch } from '@giphy/js-fetch-api'\n\nimport Toast from 'react-bootstrap/Toast';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Col from 'react-bootstrap/Col';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Link } from \"react-router-dom\";\n\nclass Gif extends React.Component {\n  constructor(props) {\n    super(props);\n    this.useDefaultSrc = this.useDefaultSrc.bind(this);\n  }\n\n  /**\n   * Set src path to local gif that says \"THIS CONTENT IS NOT AVAILABLE\"\n   * when initial src path generates an error (file not found or not an mp4 file)\n   * @arg {Event} event onError event\n   */\n  useDefaultSrc(event) {\n    event.target.src = process.env.PUBLIC_URL+\"/giphy-downsized-small.mp4\";\n    this.props.onGifDisplayError();\n  }\n\n  render() {\n    const { gif } = this.props;\n    return (\n      <span>\n        <Link to={{ \n          pathname: \"/newpage\",\n          state: {\n            gif\n          }\n        }}>\n          {/* {gif[\"images\"][\"downsized_small\"][\"mp4\"]} */}\n          <video src={gif[\"images\"][\"downsized_small\"][\"mp4\"]}\n                onError={this.useDefaultSrc}\n              type=\"video/mp4\"\n              width=\"150px\"\n              height=\"150px\"\n              autoPlay\n              muted\n              loop>\n              Your browser does not support the video tag.\n          </video>\n        </Link>\n      </span>\n    );\n  }\n}\n\nclass Alert extends React.Component {\n  render() {\n    const { message } = this.props;\n    return (\n        <Toast\n          animation={false} // Otherwise I get \"Warning: findDOMNode is deprecated in StrictMode.\"\n          onClose={this.props.onToastClose}\n          show={this.props.show}\n          delay={5000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"warning\">WARNING</strong>\n          </Toast.Header>\n          <Toast.Body>{message}</Toast.Body>\n        </Toast>\n    );\n  }\n}\n\nclass Gifs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleGifDisplayError = this.handleGifDisplayError.bind(this);\n  }\n\n  handleGifDisplayError() {\n    this.props.onGifDisplayError();\n  }\n\n  render() {\n    const rows = [];\n    \n    this.props.gifs.forEach((gif) => {\n      rows.push(\n          <Gif\n            gif={gif}\n            key={gif[\"id\"]}\n            onGifDisplayError={this.handleGifDisplayError}\n          />\n      );\n    });\n\n    return (\n      <div>\n        {rows}\n      </div>\n    );\n  }\n}\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.handleInputTextChange = this.handleInputTextChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  handleSearchClick(e) {\n    this.props.onSearchClick();\n  }\n  \n  handleInputTextChange(e) {\n    this.props.onInputTextChange(e.target.value);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.handleSearchClick()\n  }\n\n  render() {\n    return (\n      <Form \n        onSubmit={(e) => this.handleSubmit(e)}>\n          <Form.Row>\n            <Col>\n              <Form.Control type=\"text\" placeholder=\"Enter GIF keywords\"\n              value={this.props.inputText} onChange={this.handleInputTextChange} />\n            </Col>\n            <Col sm={13}> {/* 13 is greater than 12 (max value) so it forces Col to minimum size to fit Button*/}\n              <Button variant=\"primary\" onClick={this.handleSearchClick}>Search</Button>\n            </Col>\n          </Form.Row>\n      </Form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: '',\n      gifs: [],\n      isSearchClicked: false,\n      cannotLoadAtLeastOneImage: false,\n    };\n    \n    this.handleSearchClick = this.handleSearchClick.bind(this);\n    this.handleInputTextChange = this.handleInputTextChange.bind(this);\n    this.handleGifDisplayError = this.handleGifDisplayError.bind(this);\n    this.handleToastClose = this.handleToastClose.bind(this);\n\n    // Why this (react docs)\n    // Define as constant\n    this.gf = new GiphyFetch('sV8eZprYQZP28xz7LxaXbrv95g22CT7Z');\n  }\n\n  async searchGif() {\n    try {\n      const { data: gifs } = await this.gf.search(this.state.inputText, { sort: 'relevant', lang: 'en', limit: 10, type: 'stickers', offset: 0, rating: 'g' });\n      this.setState({ gifs });\n    } catch (error) {\n      this.setState({ gifs: [] });\n    }\n  }\n\n  handleSearchClick() {\n    this.setState({ isSearchClicked: true });\n    this.searchGif();\n  }\n\n  handleInputTextChange(inputText) {\n    this.setState({ inputText });\n  }\n\n  handleGifDisplayError() {\n    this.setState({ cannotLoadAtLeastOneImage: true })\n  }\n\n  handleToastClose() {\n    this.setState({ cannotLoadAtLeastOneImage: false })\n  }\n\n  render() {\n    return (\n      <div>\n        <img src={process.env.PUBLIC_URL+\"/PoweredBy_200_Horizontal_Light-Backgrounds_With_Logo.gif\"} alt=\"Powered by GIPHY\" />\n        <Alert\n          message=\"One or several GIFs could not be displayed (image not found or not an mp4 file)\"\n          show={this.state.cannotLoadAtLeastOneImage}\n          onToastClose={this.handleToastClose}\n        />\n        <div className=\"search-and-display\"> \n          <SearchBar\n            inputText={this.state.inputText}\n            onInputTextChange={this.handleInputTextChange}\n            onSearchClick={this.handleSearchClick}\n          />\n          {!this.state.isSearchClicked ? <span></span> : this.state.gifs.length === 0 ? <Spinner animation=\"border\" variant=\"primary\"/> : <Gifs\n            gifs={this.state.gifs}\n            inputText={this.state.inputText}\n            onGifDisplayError={this.handleGifDisplayError}\n          />}\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nimport './NewPage.css';\n\nimport { useLocation } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction useDefaultSrc(event) {\n  event.target.src = process.env.PUBLIC_URL+\"/giphy-downsized-small.mp4\";\n}\n\n// Why can I not access location in Class Component ???\n// https://stackoverflow.com/questions/37516919/react-router-getting-this-props-location-in-child-components\n\nconst NewPage = () => {\n  const location = useLocation();\n\n  if (location.state) {\n    return (\n      <div className=\"display-big-gif\">\n          <video src={location.state.gif[\"images\"][\"original_mp4\"][\"mp4\"]}\n              onError={useDefaultSrc}\n            type=\"video/mp4\"\n            width=\"300px\"\n            height=\"300px\"\n            autoPlay\n            muted\n            loop>\n              Your browser does not support the video tag.\n          </video>\n          {location.state.gif[\"title\"]}\n      </div>\n    );\n  } else {\n    return <Redirect \n        to={{ pathname: \"/\", }}\n    />\n\n  }\n}\n\nexport default NewPage;","import { Switch, Route, HashRouter } from \"react-router-dom\";\n\nimport App from './App';\nimport NewPage from './NewPage';\n\nfunction Routes() {\n    return (\n        <HashRouter basename=\"/\">\n            <div>\n            <Switch>\n              <Route exact={true} path=\"/\">\n                <App />\n              </Route>\n              <Route path=\"/newpage\">\n                <NewPage />\n              </Route>\n            </Switch>\n            </div>\n        </HashRouter>\n    );\n  }\n\nexport default Routes;\n  \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport Routes from './Routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}